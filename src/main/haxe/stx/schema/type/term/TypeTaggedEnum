package stx.schema.type.term;

class TypeTaggedEnum extends RecordType{
  public function new(ident,fields,validation,meta){
    super(ident,fields,validation,meta);
  }
  override public function get_identity(){
    final identI             = Ident.make('TaggedEnum',['std']);
    var fieldsI              = RedBlackMap.make(Comparable.String());

    for(field in this.fields.pop()){
      fieldsI = fieldsI.set(field.name,field);
    }
    final field_identities  = fieldsI.toIter().toCluster().map(
      kv -> Identity.make(Ident.make('${kv.val.name}'),[kv.val.type.identity])
    );
    final result =  Identity.make(
      identI,
      [Identity.make(this.ident,[])].imm().concat(field_identities)
    );
    return result;
  }
}